<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc='yes' ?>
<?rfc tocdepth='3' ?>
<?rfc sortrefs='yes' ?>
<rfc category="std" docName="draft-mglt-dnsop-dnssec-validator-requirements-05" ipr="trust200902">
  <front>
    <title abbrev="DNSSEC Validator Requirements">DNSSEC Validators Requirements</title>
    <author surname="Migault" initials="D.M." fullname="Daniel Migault">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>8400 boulevard Decarie</street>
          <city>Montreal, QC H4P 2N2</city>
          <country>Canada</country>
        </postal>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <author surname="York" initials="D.Y." fullname="Dan York">
      <organization>Internet Society</organization>
      <address>
        <postal/>
        <email>york@isoc.org</email>
      </address>
    </author>
    <author surname="Lewis" initials="E.L." fullname="Edward Lewis">
      <organization>ICANN</organization>
      <address>
        <postal>
          <street>801 17th Street NW Suite 401</street>
          <city>Washington DC, 20006 US</city>
          <country>USA</country>
        </postal>
        <email>edward.lewis@icann.org</email>
      </address>
    </author>
    <date day="13" month="April" year="2017"/>
    <area>INTERNET</area>
    <workgroup>DNSOP</workgroup>
    <abstract>
      <t>DNSSEC provides data integrity and authentication for DNSSEC
validators. However, without valid trust anchor(s) and an acceptable
value for the current time, DNSSEC validation cannot be performed. This
document lists the requirements to be addressed so resolvers can have
DNSSEC validation be always-on.
</t>
    </abstract>
  </front>
  <middle>
    <section title="Requirements notation">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT","SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in
this document are to be interpreted as described in <xref
target="RFC2119"/>. </t>
    </section>
    <section title="Introduction">
      <t>
DNSSEC <xref target="R C4033"/>, <xref target="RFC4034"/>, <xref
target="RFC4035"/> adds data authentication and integrity checks to DNS
<xref target="RFC1034"/>, <xref target="RFC1035"/>. For signature
validation, DNSSEC requires a valid trust anchor such as the Key Signing
Key (KSK)  (the Root Zone KSK for example) and an appropriated time.
</t>
      <t>
A DNSSEC Validator badly configured may result in disabling DNS
resolutions, and thus disabling communications relying on the DNS
resolution.
</t>
      <t>
On the other hand, no standard mechanisms or protocols have been
provided to manage DNSSEC Validators. Management of DNSSEC Validators
typically includes the ability to check the DNSSEC configuration, to
provision the appropriated trust anchor as well as the ability to
recover emergency situation that results in unappropriated data being
cached.
</t>
      <t>
The lack of management of DNSSEC Validator has slowed down the adoption
of DNSSEC. In addition, when deployed, DNSSEC may in fact be deployed in
an unsecure way to avoid disturbing communications.  Typically
successful validation are mentioned while validation failure are
bypassed. Although encouraging, these steps are much too small to
achieve the ambition of DNSSEC that is securing the DNS.
</t>
      <t>
This document describes scenarios where DNSSEC validation cannot be
performed properly by the DNSSEC Validator and additional mechanisms are
needed. In other words, this means that FQDN properly signed are
rejected. From these scenarios, this document derives requirements so
DNSSEC Validators can have DNSSEC always activated.
</t>
      <t>
Note that the requirements do not indicate how they are fulfilled.  More
especially, the DNSSEC Validator may implement autonomous mechanism to
fulfill these requirements or they may be fulfilled by a third party
such as a network administrator.
</t>
      <t>
We expect these requirements to be useful to design appropriated
protocols for the management of DNSSEC Validator. Once under control
risks associated to DNSSEC validation performed improperly will be
reduced, thus encouraging activation of DNSSEC Validators.
</t>
    </section>
    <section title="Terminology">
      <t>
This document uses the following terminology: [horizontal]
- DNSSEC Validator: :: the entity that performs DNSSEC resolution and performs signature validation.
</t>
    </section>
    <section anchor="sec-time" title="Time derivation and absence of Real Time Clock">
      <t>
With M2M communication some devices are not expecting to embed Real Time
Clock (Raspberry Pi is one example of such devices). When these devices
are re-plugged the initial time is set to January 1 1970. Other devices
that have clocks that may suffer from time derivation. All these devices
cannot rely on their time estimation to perform DNSSEC validation.
</t>
    </section>
    <section title="Unplugged devices during Trust Anchor KSKs roll over">
      <t>
In this section we consider a regular Trust Anchor KSK roll over as
described in <xref target="RFC6781"/> and <xref target="RFC5011"/>.
Unlike regular KSKs, Trust Anchor KSK does not have to update the DS
RRset in the parent zone. According to <xref target="RFC6781"/>, if
TTL_K is the TTL associated to the Trust Anchor KSK and associated
RRSIGs, the time of key roll over is around TTL_K with double signed
KSKs, and 2 x TTL_K in the case of single singed KSK.
</t>
      <t>
The Root Zone KSK is an example of Trust Anchor KSK and at the time of
writing the KSK has a TTL of 172800 seconds which means 2 days. This
means that 2 days would be sufficient to perform a Trust Anchor KSK roll
over. <xref target="RFC5011"/> recommends to advertise the new / old key
for 30 days. This means that a device unplugged for two months may not
be aware of a regular Trust Anchor KSK rollover.
</t>
      <t>
A DNSSEC Validator may be properly configured by the manufacturer to
perform DNSSEC validation. The device may for example be configured by
the manufacturer shipped to resellers that store the device for a few
months, years before selling the devices to the final end user.
Similarly, an operational device may remain unplugged for a while for
maintenance reason, or held in reserve when a crash occurs. This fall
back is never expected to happen and may happen years after.
</t>
      <t>
Suppose a KSK complete key roll-over occurs (for example at the Root
Zone) while the device is offline. Once plugged again, the device will
attempt to validate DNSSEC signature with the old Trust Anchor KSK.
</t>
      <t>
The key point in this example is that the device is boot and does not
rely on cached information.
</t>
      <t>
We think these requirements are not restrictive to the Root Zone KSK,
but to any KSK. In fact it is not always possible to build a trusted
delegation between the Root Zone and any sub zone. This may happen for
example if one of the upper zones does not handle the secure delegation
or improperly implement it. A DS RRset may not be properly filled or its
associated signature cannot be validated. As the chain of trust between
a zone and the root zone may not be validated, the DNSSEC validation for
the zone requires a Trust Anchor. Such DNS(SEC) resolutions may be
critical for infrastructure management. A company "Example" may for
address all its devices under the domain example.com and may not want
disruption to happen if the .com delegation cannot be validated for any
reason. Such companies may provision there DNSSEC Validator with the
Trust Anchor KSK for the zone example.com in addition to the regular
DNSSEC delegation. Similarly some some domains may present different
views such as a "private" view and a "public view". These zones may have
some different content, and may use a different KSK for each view.
</t>
      <t>
Note that providing Trust Anchor KSKs is a crucial operation and can be
used a vector of attack. As a result, this operation MUST be performed
cautiously.
</t>
    </section>
    <section title="Emergency Key rollover">
      <t>
Emergency key roll over designates any rollover not performed as
described in Section 4.1 of <xref target="RFC6781"/> which results in
differences between data stored in the cache of the DNSSEC Validators
and the authoritative servers (see section 4.2 in <xref
target="RFC6781"/>)
</t>
      <t>
Emergency key roll over can be intentionally performed or result from an
unexpected behavior in the publishing/validation chain. This is out of
scope of this document to understand the reasons/motivations for such
key roll over. This document assumes such situation are likely to happen
and lists the requirement so DNSSEC Validator can recover from such
situations.
</t>
      <section anchor="sec-invalid-cached-zsk" title="Invalid cached ZSK">
        <t>
An emergency ZSK rollover may result in a new ZSK with associated new
RRSIG published in the authoritative zone, while DNSSEC Validator may
still cache the old value of the ZSK. For a RRset not cached, the DNSSEC
Validator performs a DNSSEC query to the authoritative server that
returns the RRset signed with the new ZSK. The DNSSEC Validator
validates the signature with the old ZSK which results in an invalid
signature check.
</t>
        <t>
Suppose the old ZSK has been corrupted and that old RRsets have been
spoofed. Until the ZSK TTL expires, the DNSSEC Validator considers the
spoofed RRsets as valid and the newly signed RRsets as invalid.
</t>
        <t>
Note that if the DNSSEC Validator receives an indication that a ZSK is
not valid anymore, it is expected to flush its cache entries of the old
ZSK as well as all entries that have been validated by the old ZSK.
This does not lead to impersonation of ZSK, at most it generates some
additional DNSSEC resolutions and validations.
</t>
      </section>
      <section title="Invalid cached RRSIG">
        <t>
Invalid cached RRSIG  would mean the DNSSEC Validator caches a new ZSK,
but still has a RRset with a RRSIG signed with the old ZSK.
</t>
        <t>
This situation should not happen as when a ZSK is renewed all RRsets
validated by the old ZSK are flushed from the cache.
</t>
      </section>
      <section anchor="sec-invalid-cached-ksk" title="Invalid cached KSK">
        <t>
Consequences of invalid KSK are similar to ZSK. None of the RRSIG can be
validated even the one signing the ZSK. (cf. <xref
target="sec-invalid-cached-zsk"/>)
</t>
      </section>
      <section anchor="sec-invalid-ds" title="Invalid DS">
        <t>
The DS RRset is stored in the parent zone to build a chain of trust with
the child zone. This DS RRset can be invalid because its RDATA (KSK) is
not anymore used in the child zone or because the DS is badly signed and
cannot be validated by the DNSSEC Validator.
</t>
        <t>
In both cases the child zone is considered as insecure and the valid
child zone&#8217;s KSK should become a Trust Anchor KSK.
</t>
      </section>
    </section>
    <section anchor="sec-invalid-rrsig" title="Invalid RRSIG">
      <t>
A zone may have been badly signed, which means that the KSK or ZSK
cannot validate the RRSIG associated to the RRsets. This may not be due
to a key roll over, but to an incompatibility between the keys (KSK or
ZSK) and the signatures.
</t>
      <t>
This means that the zone for a given time will be known as "known
insecure". The DNSSEC Validator is not expected to perform signature
validation for this zone. It is expected that this information is
associated to a Time To Live (TTL).
</t>
      <t>
Note that, this information may be used as an attack vector to
impersonate a zone, and must be provided in a trusted way, by a trusted
party.
</t>
      <t>
If a zone has been badly signed, the administrator of the authoritative
DNS server may resign the zone with the same keys or proceed to an
emergency key rollover. If the signature is performed with the same
keys, the DNSSEC Validator may notice by itself that RRSIG can be
validated. On the other hand if a key rollover is performed, the newly
received RRSIG will carry a new key id. Upon receiving a new key id in
the RRSIG, the DNSSEC Validator is expected to retrieve the new ZSK/KSK.
If the RRSIG can be validated, the DNSSEC Validator is expected to
remove the "known insecure" flag.
</t>
      <t>
However, if the KSK/ZSK are rolled over and RRSIG cannot be validated,
it remains hard for the DNSSEC Validator to determine whether the RRSIG
cannot be validated or that RRSIG are invalid. As a result:
</t>
    </section>
    <section anchor="sec-private" title="Private KSK/ZSK">
      <t>
DNSSEC may also be used in some private environment. Corporate networks
and home networks, for example, may want to take advantage of DNSSEC for
a local scope network. Typically, a corporate network may use a local
scope KSK / ZSK to validate DNS RRsets provided by authoritative DNSSEC
server in the corporate network. This use case is also known as the
"split-view" use case. These RRsets within the corporate network may
differ from those hosted on the public DNS infrastructure. Note that
using different KSK/ZSK for a given zone may expose a zone to signature
invalidation. This is especially the case for DNSSEC validators that are
expected to flip-flop between local and public scope. How validators
have to handle the various provisioned KSK/ZSKs is out of scope of the
document.
</t>
      <t>
Homenet work may use DNSSEC with TLDs or associated domain names that
are of local scope and not even registered in the public DNS
infrastructure.
</t>
    </section>
    <section title="IANA Considerations">
      <t>
There are no IANA consideration for this document.
</t>
    </section>
    <section anchor="sec-considerations" title="Security Considerations">
      <t>
The requirements listed in this document aim at providing the DNSSEC
Validator appropriated information so DNSSEC validation can be
performed. On the other hand, providing inappropriate information can
lead to misconfiguring the DNSSEC Validator, and thus disrupting the
DNSSEC resolution service. As a result, enabling the setting of
configuration parameters by a third party may open a wide surface of
attacks.
</t>
      <t>
As an appropriate time value is necessary to perform signature check
(cf. <xref target="sec-time"/>), an attacker may provide rogue time
value to prevent the DNSSEC Validator to check signatures.
</t>
      <t>
An attacker may also affect the resolution service by regularly asking
the DNSSEC Validator to flush the KSK/ZSK from its cache (cf.  <xref
target="sec-invalid-cached-zsk"/><xref
target="sec-invalid-cached-ksk"/>). All associated data will also be
flushed. This generates additional DNSSEC resolution and additional
validations, as RRSet that were cached require a DNSSEC resolution over
the Internet. This affects the resolution service by slowing down
responses, and increases the load on the DNSSEC Validator.
</t>
      <t>
An attacker may ask the DNSSEC Validator to consider a rogue KSK/ZSK (
cf. <xref target="sec-invalid-ds"/>, <xref target="sec-private"/>), thus
hijacking the DNS zone. Similarly, (cf. <xref
target="sec-invalid-rrsig"/>) an attacker may inform the DNSSEC
Validator not to trust a given KSK in order to prevent DNSSEC validation
to be performed.
</t>
      <t>
An attacker (cf. <xref target="sec-invalid-rrsig"/>)  can advertise a
"known insecure" KSK or ZSK is "back to secure" to prevent signature
check to be performed correctly.
</t>
      <t>
As a result, information considered by the DNSSEC Validator should be
from a trusted party. This trust party should have been authenticated,
and the channel used to exchange the information should also be
protected and authenticated.
</t>
    </section>
    <section title="Acknowledgment">
      <t>
The need to address DNSSEC issues on the resolver side started in the
Home Networks mailing list and during the IETF87 in Berlin. Among
others, people involved in the discussion were Ted Lemon, Ralph Weber,
Normen Kowalewski, and Mikael Abrahamsson. People involved in the email
discussion initiated by Jim Gettys were, with among others, Paul
Wouters, Joe Abley and Michael Richardson.
</t>
      <t>
The current document has been initiated after a discussion with Paul
Wouter and Evan Hunt.
</t>
    </section>
  </middle>
  <back>
    <references title="Normative References">
      <reference anchor="RFC1034" target="http://www.rfc-editor.org/info/rfc1034">
        <front>
          <title>Domain names - concepts and facilities</title>
          <author initials="P.V." surname="Mockapetris" fullname="P.V. Mockapetris">
            <organization/>
          </author>
          <date year="1987" month="November"/>
          <abstract>
            <t>
This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.
</t>
          </abstract>
        </front>
        <seriesInfo name="STD" value="13"/>
        <seriesInfo name="RFC" value="1034"/>
        <seriesInfo name="DOI" value="10.17487/RFC1034"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc1034"/>
      </reference>
      <reference anchor="RFC1035" target="http://www.rfc-editor.org/info/rfc1035">
        <front>
          <title>Domain names - implementation and specification</title>
          <author initials="P.V." surname="Mockapetris" fullname="P.V. Mockapetris">
            <organization/>
          </author>
          <date year="1987" month="November"/>
          <abstract>
            <t>
This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.
</t>
          </abstract>
        </front>
        <seriesInfo name="STD" value="13"/>
        <seriesInfo name="RFC" value="1035"/>
        <seriesInfo name="DOI" value="10.17487/RFC1035"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc1035"/>
      </reference>
      <reference anchor="RFC2119" target="http://www.rfc-editor.org/info/rfc2119">
        <front>
          <title>Key words for use in RFCs to Indicate Requirement Levels</title>
          <author initials="S." surname="Bradner" fullname="S. Bradner">
            <organization/>
          </author>
          <date year="1997" month="March"/>
          <abstract>
            <t>
In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.
</t>
          </abstract>
        </front>
        <seriesInfo name="BCP" value="14"/>
        <seriesInfo name="RFC" value="2119"/>
        <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc2119"/>
      </reference>
      <reference anchor="RFC4033" target="http://www.rfc-editor.org/info/rfc4033">
        <front>
          <title>DNS Security Introduction and Requirements</title>
          <author initials="R." surname="Arends" fullname="R. Arends">
            <organization/>
          </author>
          <author initials="R." surname="Austein" fullname="R. Austein">
            <organization/>
          </author>
          <author initials="M." surname="Larson" fullname="M. Larson">
            <organization/>
          </author>
          <author initials="D." surname="Massey" fullname="D. Massey">
            <organization/>
          </author>
          <author initials="S." surname="Rose" fullname="S. Rose">
            <organization/>
          </author>
          <date year="2005" month="March"/>
          <abstract>
            <t>
The Domain Name System Security Extensions (DNSSEC) add data origin authentication and data integrity to the Domain Name System.  This document introduces these extensions and describes their capabilities and limitations.  This document also discusses the services that the DNS security extensions do and do not provide.  Last, this document describes the interrelationships between the documents that collectively describe DNSSEC.  [STANDARDS-TRACK]
</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="4033"/>
        <seriesInfo name="DOI" value="10.17487/RFC4033"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc4033"/>
      </reference>
      <reference anchor="RFC4034" target="http://www.rfc-editor.org/info/rfc4034">
        <front>
          <title>Resource Records for the DNS Security Extensions</title>
          <author initials="R." surname="Arends" fullname="R. Arends">
            <organization/>
          </author>
          <author initials="R." surname="Austein" fullname="R. Austein">
            <organization/>
          </author>
          <author initials="M." surname="Larson" fullname="M. Larson">
            <organization/>
          </author>
          <author initials="D." surname="Massey" fullname="D. Massey">
            <organization/>
          </author>
          <author initials="S." surname="Rose" fullname="S. Rose">
            <organization/>
          </author>
          <date year="2005" month="March"/>
          <abstract>
            <t>
This document is part of a family of documents that describe the DNS Security Extensions (DNSSEC).  The DNS Security Extensions are a collection of resource records and protocol modifications that provide source authentication for the DNS.  This document defines the public key (DNSKEY), delegation signer (DS), resource record digital signature (RRSIG), and authenticated denial of existence (NSEC) resource records.  The purpose and format of each resource record is described in detail, and an example of each resource record is given.
</t>
            <t>
This document obsoletes RFC 2535 and incorporates changes from all updates to RFC 2535.  [STANDARDS-TRACK]
</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="4034"/>
        <seriesInfo name="DOI" value="10.17487/RFC4034"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc4034"/>
      </reference>
      <reference anchor="RFC4035" target="http://www.rfc-editor.org/info/rfc4035">
        <front>
          <title>Protocol Modifications for the DNS Security Extensions</title>
          <author initials="R." surname="Arends" fullname="R. Arends">
            <organization/>
          </author>
          <author initials="R." surname="Austein" fullname="R. Austein">
            <organization/>
          </author>
          <author initials="M." surname="Larson" fullname="M. Larson">
            <organization/>
          </author>
          <author initials="D." surname="Massey" fullname="D. Massey">
            <organization/>
          </author>
          <author initials="S." surname="Rose" fullname="S. Rose">
            <organization/>
          </author>
          <date year="2005" month="March"/>
          <abstract>
            <t>
This document is part of a family of documents that describe the DNS Security Extensions (DNSSEC).  The DNS Security Extensions are a collection of new resource records and protocol modifications that add data origin authentication and data integrity to the DNS.  This document describes the DNSSEC protocol modifications.  This document defines the concept of a signed zone, along with the requirements for serving and resolving by using DNSSEC.  These techniques allow a security-aware resolver to authenticate both DNS resource records and authoritative DNS error indications.
</t>
            <t>
This document obsoletes RFC 2535 and incorporates changes from all updates to RFC 2535.  [STANDARDS-TRACK]
</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="4035"/>
        <seriesInfo name="DOI" value="10.17487/RFC4035"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc4035"/>
      </reference>
      <reference anchor="RFC5011" target="http://www.rfc-editor.org/info/rfc5011">
        <front>
          <title>Automated Updates of DNS Security (DNSSEC) Trust Anchors</title>
          <author initials="M." surname="StJohns" fullname="M. StJohns">
            <organization/>
          </author>
          <date year="2007" month="September"/>
          <abstract>
            <t>
This document describes a means for automated, authenticated, and authorized updating of DNSSEC "trust anchors".  The method provides protection against N-1 key compromises of N keys in the trust point key set.  Based on the trust established by the presence of a current anchor, other anchors may be added at the same place in the hierarchy, and, ultimately, supplant the existing anchor(s).
</t>
            <t>
This mechanism will require changes to resolver management behavior (but not resolver resolution behavior), and the addition of a single flag bit to the DNSKEY record.  [STANDARDS-TRACK]
</t>
          </abstract>
        </front>
        <seriesInfo name="STD" value="74"/>
        <seriesInfo name="RFC" value="5011"/>
        <seriesInfo name="DOI" value="10.17487/RFC5011"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc5011"/>
      </reference>
    </references>
    <references title="Informational References">
      <reference anchor="RFC6781" target="http://www.rfc-editor.org/info/rfc6781">
        <front>
          <title>DNSSEC Operational Practices, Version 2</title>
          <author initials="O." surname="Kolkman" fullname="O. Kolkman">
            <organization/>
          </author>
          <author initials="W." surname="Mekking" fullname="W. Mekking">
            <organization/>
          </author>
          <author initials="R." surname="Gieben" fullname="R. Gieben">
            <organization/>
          </author>
          <date year="2012" month="December"/>
          <abstract>
            <t>
This document describes a set of practices for operating the DNS with security extensions (DNSSEC).  The target audience is zone administrators deploying DNSSEC.
</t>
            <t>
The document discusses operational aspects of using keys and signatures in the DNS.  It discusses issues of key generation, key storage, signature generation, key rollover, and related policies.
</t>
            <t>
This document obsoletes RFC 4641, as it covers more operational ground and gives more up-to-date requirements with respect to key sizes and the DNSSEC operations.
</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="6781"/>
        <seriesInfo name="DOI" value="10.17487/RFC6781"/>
        <format type="TXT" target="http://www.rfc-editor.org/info/rfc6781"/>
      </reference>
      <reference anchor="I-D.livingood-negative-trust-anchors">
        <front>
          <title>Definition and Use of DNSSEC Negative Trust Anchors</title>
          <author initials="J" surname="Livingood" fullname="J Livingood">
            <organization/>
          </author>
          <author initials="C" surname="Griffiths" fullname="C Griffiths">
            <organization/>
          </author>
          <date year="2014" month="September"/>
          <abstract>
            <t>
DNS Security Extensions (DNSSEC) is now entering widespread deployment.  However, domain signing tools and processes are not yet as mature and reliable as is the case for non-DNSSEC-related domain administration tools and processes.  One potential technique to mitigate this is to use a Negative Trust Anchor, which is defined in this document.  This document discusses Trust Anchors for DNSSEC and defines a Negative Trust Anchor, which is potentially useful during the transition to ubiquitous DNSSEC deployment.  These are configured locally on a particular instance of a validating DNS recursive resolver and can shield end users of such a resolver from the DNSSEC- related authoritative name server operational errors that appear to be somewhat typical during the transition to ubiquitous DNSSEC deployment.  Negative Trust Anchors are intended to be temporary, and should not be distributed by IANA or any other organization outside of the administrative boundary of the organization locally implementing a Negative Trust Anchor.  Finally, Negative Trust Anchors pertain only to DNSSEC and not to Public Key Infrastructures (PKI) such ad X.509.
</t>
          </abstract>
        </front>
        <seriesInfo name="Internet-Draft" value="draft-livingood-negative-trust-anchors-07"/>
        <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-livingood-negative-trust-anchors-07.txt"/>
      </reference>
    </references>
    <section title="Document Change Log">
      <t>
[RFC Editor: This section is to be removed before publication]
</t>
      <t>
-02: Clarification for private ZSK/KSK.
</t>
      <t>
-01: minor editings.
</t>
      <t>
-00: First version published.
</t>
    </section>
  </back>
</rfc>
